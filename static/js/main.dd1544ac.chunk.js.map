{"version":3,"sources":["components/ProjectChip.js","components/ProjectCard.js","components/Separator.js","components/Description.js","components/ProjectDetail.js","components/PortfolioHeader.js","App.js","i18next.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","chip","margin","spacing","ProjectChip","skill","classes","Chip","className","variant","avatar","Avatar","ext","label","title","root","width","backgroundColor","color","palette","secondary","main","chipContainer","marginTop","cardActions","display","justifyContent","ProjectCard","text","project","onMoreAction","Card","CardHeader","Tooltip","role","aria-label","split","slice","toUpperCase","subheader","type","year","CardContent","cardContent","Typography","component","description","length","Grid","container","direction","justify","alignItems","skills","map","index","key","CardActions","Button","size","onClick","flexGrow","flexDirection","marginBottom","primary","dark","Separator","subtitle","divider","Description","t","useTranslation","Divider","padding","descContainer","companyInfo","ProjectDetail","company","client","icons","marginRight","PortfolioHeader","contextUrl","i18n","AppBar","position","Toolbar","IconButton","edge","alt","src","Hidden","smDown","smUp","Link","target","href","splited","language","lang","resumeUrl","download","createMuiTheme","contrastThreshold","tonalOffset","menuButton","bodyContainer","drowerCloseButton","top","right","zIndex","initialState","projects","companies","detailProject","isDrowerOpen","reducer","state","action","payload","Error","App","useReducer","dispatch","filterCompanies","forEach","prg","indexOf","push","useEffect","fetch","then","response","json","data","ThemeProvider","Fragment","Drawer","anchor","open","onClose","filter","item","xs","sm","md","lg","use","LanguageDetector","initReactI18next","init","fallbackLng","debug","resources","en","translation","it","interpolation","escapeValue","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dd1544ac.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  chip: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n}));\r\n\r\nexport default function ProjectChip({ skill }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Chip\r\n      className={classes.chip}\r\n      variant='outlined'\r\n      avatar={<Avatar>{skill.ext}</Avatar>}\r\n      label={skill.title}\r\n    ></Chip>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport ProjectChip from './ProjectChip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 272,\r\n  },\r\n  avatar: {\r\n    backgroundColor: 'transparent',\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  chipContainer: {\r\n    marginTop: theme.spacing(1.3),\r\n  },\r\n  cardActions: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n}));\r\n\r\nexport default function ProjectCard({ project, onMoreAction }) {\r\n  const classes = useStyles();\r\n\r\n  const getSubheader = ({ type, year }) => {\r\n    return type + ' ' + year;\r\n  };\r\n\r\n  const parseBodyText = (text) => {\r\n    return text.length >= 115 ? text.slice(0, 90) + '...' : text;\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={\r\n          <Tooltip title={project.role} aria-label={project.role}>\r\n            <Avatar aria-label='company' className={classes.avatar}>\r\n              {project.role.split(' ')[0].slice(0, 1).toUpperCase()}\r\n              {project.role.split(' ')[1].slice(0, 1).toUpperCase()}\r\n            </Avatar>\r\n          </Tooltip>\r\n        }\r\n        title={project.title}\r\n        subheader={getSubheader(project)}\r\n      />\r\n      <CardContent className={classes.cardContent}>\r\n        <Typography variant='body2' color='textSecondary' component='p'>\r\n          {parseBodyText(project.description)}\r\n        </Typography>\r\n        <Grid\r\n          className={classes.chipContainer}\r\n          container\r\n          direction='column'\r\n          justify='center'\r\n          alignItems='flex-start'\r\n        >\r\n          {project.skills.slice(0, 5).map((skill, index) => (\r\n            <ProjectChip key={index} skill={skill} />\r\n          ))}\r\n        </Grid>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button size='small' color='primary' onClick={() => onMoreAction()}>\r\n          ALTRE INFO\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'center',\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n  title: {\r\n    color: theme.palette.primary.dark,\r\n  },\r\n}));\r\n\r\nexport default function Separator({ title }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography className={classes.title} variant='h5'>\r\n        {title}\r\n      </Typography>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(5),\r\n    marginBottom: theme.spacing(5),\r\n  },\r\n  title: {\r\n    color: theme.palette.primary.dark,\r\n  },\r\n  subtitle: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  divider: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function Description() {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container alignItems='center' justify='flex-start'>\r\n        <Typography className={classes.title} variant='h3'>\r\n          {t('title')}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid\r\n        className={classes.subtitle}\r\n        container\r\n        alignItems='center'\r\n        justify='flex-start'\r\n      >\r\n        <Typography variant='body1'>\r\n          <q>{t('subtitle')}</q>\r\n        </Typography>\r\n      </Grid>\r\n      <Divider className={classes.divider} />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport ProjectChip from './ProjectChip';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 272,\r\n    padding: theme.spacing(3),\r\n  },\r\n  chipContainer: {\r\n    marginTop: theme.spacing(1.3),\r\n  },\r\n  descContainer: {\r\n    marginTop: theme.spacing(1.3),\r\n  },\r\n  companyInfo: {\r\n    marginTop: theme.spacing(1.3),\r\n  },\r\n  divider: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n}));\r\n\r\nexport default function ProjectDetail({ project }) {\r\n  const classes = useStyles();\r\n\r\n  if (!project) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <Typography variant='h6'>{project.title}</Typography>\r\n        <Typography color='secondary' variant='subtitle1'>\r\n          {project.type}\r\n        </Typography>\r\n      </div>\r\n      <Divider className={classes.divider} />\r\n      <div className={classes.companyInfo}>\r\n        <Typography variant='subtitle2'>\r\n          {project.company} {project.year}\r\n        </Typography>\r\n        <Typography variant='subtitle2'>{project.client}</Typography>\r\n        <Typography variant='subtitle2'>{project.role}</Typography>\r\n      </div>\r\n\r\n      <div className={classes.descContainer}>\r\n        <Typography variant='body1'>{project.description}</Typography>\r\n      </div>\r\n\r\n      <Grid\r\n        className={classes.chipContainer}\r\n        container\r\n        direction='row'\r\n        justify='flex-start'\r\n        alignItems='center'\r\n      >\r\n        {project.skills.map((skill, index) => (\r\n          <ProjectChip key={index} skill={skill} />\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Link from '@material-ui/core/Link';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport Facebook from '@material-ui/icons/Facebook';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icons: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function PortfolioHeader({ contextUrl }) {\r\n  const classes = useStyles();\r\n  const { i18n } = useTranslation();\r\n\r\n  const resumeUrl = () => {\r\n    const splited = i18n.language.split('-');\r\n    const lang = splited.length > 1 ? splited[0] : i18n.language;\r\n    return `/${contextUrl}/RESUME-Alexei-Bostan-${lang}.pdf`;\r\n  };\r\n\r\n  return (\r\n    <AppBar position='fixed'>\r\n      <Toolbar>\r\n        <IconButton\r\n          edge='start'\r\n          className={classes.icons}\r\n          color='inherit'\r\n          aria-label='icon'\r\n        >\r\n          <Avatar\r\n            alt='Alexei Bostan'\r\n            src='https://alexeibostan.github.io/ab-portfolio/logo.png'\r\n          />\r\n        </IconButton>\r\n        <Hidden smDown>\r\n          <Typography variant='h6' component='h1' className={classes.title}>\r\n            Alexei Bostan Portfolio\r\n          </Typography>\r\n        </Hidden>\r\n        <Hidden smUp>\r\n          <Typography variant='h6' component='h1' className={classes.title}>\r\n            Alexei Bostan\r\n          </Typography>\r\n        </Hidden>\r\n        <Hidden smDown>\r\n          <Link\r\n            target='_blank'\r\n            href='https://github.com/alexeibostan'\r\n            color='inherit'\r\n          >\r\n            <IconButton\r\n              edge='end'\r\n              className={classes.icons}\r\n              color='inherit'\r\n              aria-label='github'\r\n            >\r\n              <GitHubIcon />\r\n            </IconButton>\r\n          </Link>\r\n        </Hidden>\r\n        <Link\r\n          target='_blank'\r\n          href='https://www.linkedin.com/in/alexei-bostan-6706b6a7/'\r\n          color='inherit'\r\n        >\r\n          <IconButton\r\n            edge='end'\r\n            className={classes.icons}\r\n            color='inherit'\r\n            aria-label='linkedin'\r\n          >\r\n            <LinkedInIcon />\r\n          </IconButton>\r\n        </Link>\r\n        <Hidden smDown>\r\n          <Link\r\n            target='_blank'\r\n            href='https://www.facebook.com/alexandre.lord1'\r\n            color='inherit'\r\n          >\r\n            <IconButton\r\n              edge='end'\r\n              className={classes.icons}\r\n              color='inherit'\r\n              aria-label='facebook'\r\n            >\r\n              <Facebook />\r\n            </IconButton>\r\n          </Link>\r\n        </Hidden>\r\n        <Link\r\n          href={resumeUrl()}\r\n          download='RESUME-Alexei-Bostan'\r\n          color='inherit'\r\n        >\r\n          <IconButton\r\n            edge='end'\r\n            className={classes.icons}\r\n            color='inherit'\r\n            aria-label='github'\r\n          >\r\n            <AssignmentIndIcon />\r\n          </IconButton>\r\n        </Link>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import React, { useReducer, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\n\r\nimport ProjectCard from './components/ProjectCard';\r\nimport Separator from './components/Separator';\r\nimport Description from './components/Description';\r\nimport ProjectDetail from './components/ProjectDetail';\r\nimport PortfolioHeader from './components/PortfolioHeader';\r\n\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#2F5597',\r\n    },\r\n    secondary: {\r\n      main: '#ED7D31',\r\n    },\r\n    contrastThreshold: 3,\r\n    tonalOffset: 0.2,\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  bodyContainer: {\r\n    padding: theme.spacing(3),\r\n    marginTop: 64,\r\n  },\r\n  drowerCloseButton: {\r\n    position: 'absolute',\r\n    top: 5,\r\n    right: 5,\r\n    zIndex: 2,\r\n  },\r\n}));\r\n\r\nconst contextUrl = 'ab-portfolio';\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  companies: [],\r\n  detailProject: null,\r\n  isDrowerOpen: false,\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'FETCH_PROJECTS_SUCCESS':\r\n      return { ...state, projects: action.payload };\r\n    case 'FETCH_COMPANIES_SUCCESS':\r\n      return { ...state, companies: action.payload };\r\n    case 'OPEN_DROWER':\r\n      return { ...state, isDrowerOpen: true };\r\n    case 'CLOSE_DROWER':\r\n      return { ...state, isDrowerOpen: false };\r\n    case 'SHOW_DETAIL_PROJECT':\r\n      return { ...state, detailProject: action.payload, isDrowerOpen: true };\r\n    default:\r\n      throw new Error('The action is not handled yet!');\r\n  }\r\n}\r\n\r\nexport default function App() {\r\n  const classes = useStyles();\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { i18n } = useTranslation();\r\n\r\n  const filterCompanies = (projects) => {\r\n    const companies = [];\r\n    projects.forEach((prg) => {\r\n      if (companies.indexOf(prg.company) === -1) {\r\n        companies.push(prg.company);\r\n      }\r\n    });\r\n    return companies;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const splited = i18n.language.split('-');\r\n    const lang = splited.length > 1 ? splited[0] : i18n.language;\r\n    fetch(`/${contextUrl}/ab-projects-${lang}.json`)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        dispatch({\r\n          type: 'FETCH_COMPANIES_SUCCESS',\r\n          payload: filterCompanies(data),\r\n        });\r\n        dispatch({ type: 'FETCH_PROJECTS_SUCCESS', payload: data });\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ThemeProvider theme={theme}>\r\n        {/* DROWER FOR DETAIL PROJECT */}\r\n        <React.Fragment key='right'>\r\n          <Drawer\r\n            anchor='right'\r\n            open={state.isDrowerOpen}\r\n            onClose={() => dispatch({ type: 'CLOSE_DROWER' })}\r\n          >\r\n            <div>\r\n              <IconButton\r\n                onClick={() => dispatch({ type: 'CLOSE_DROWER' })}\r\n                className={classes.drowerCloseButton}\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n              <ProjectDetail project={state.detailProject} />\r\n            </div>\r\n          </Drawer>\r\n        </React.Fragment>\r\n\r\n        {/* PAGE HEADER */}\r\n        <PortfolioHeader contextUrl={contextUrl} />\r\n\r\n        {/* PAGE BODY */}\r\n        <div className={classes.bodyContainer}>\r\n          <Description />\r\n          {state.companies.map((company) => (\r\n            <div key={company}>\r\n              <Separator title={company} />\r\n              <Grid\r\n                container\r\n                alignItems='center'\r\n                justify='flex-start'\r\n                spacing={3}\r\n              >\r\n                {state.projects\r\n                  .filter((prg) => prg.company === company)\r\n                  .map((prg, index) => (\r\n                    <Grid key={index} item xs={12} sm={6} md={4} lg={3}>\r\n                      <ProjectCard\r\n                        project={prg}\r\n                        onMoreAction={() =>\r\n                          dispatch({\r\n                            type: 'SHOW_DETAIL_PROJECT',\r\n                            payload: prg,\r\n                          })\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  ))}\r\n              </Grid>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n","import i18n from 'i18next';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\n// Resources for translation supported languges it and en\r\nconst resources = {\r\n  en: {\r\n    translation: {\r\n      title: 'Front End Developer',\r\n      subtitle: 'If there is a limit, I want to reach it and then overcome it',\r\n    },\r\n  },\r\n  it: {\r\n    translation: {\r\n      title: 'Sviluppatore Front End',\r\n      subtitle: 'Se esiste un limite, voglio raggiungerlo per poi superarlo',\r\n    },\r\n  },\r\n};\r\n\r\ni18n\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next) // bind react-i18next to the instance\r\n  .init({\r\n    fallbackLng: 'en',\r\n    debug: false,\r\n    resources: resources,\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react!!\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport './i18next';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}